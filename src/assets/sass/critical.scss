/* STYLES FOR ABOVE THE FOLD */

/*-- -------------------------- -->
<---           Hero             -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    #hero-1898 {
        /* 200px - 300px - leaving extra space for the navigation */
        padding: clamp(12.5rem, 25.95vw, 18.75em) calc(16 / 16 * 1rem);
        /* prevents the topper line from causing an overflow */
        overflow: hidden;
        position: relative;
        z-index: 1;

        .cs-container {
            width: 100%;
            max-width: calc(1280 / 16 * 1rem);
            margin: auto;
            display: flex;
            justify-content: flex-start;
            align-items: center;
            flex-wrap: wrap;
            gap: calc(48 / 16 * 1rem);
        }

        .cs-content {
            text-align: left;
            width: 100%;
            max-width: calc(750 / 16 * 1rem);
            display: flex;
            flex-direction: column;
            align-items: flex-start;
            position: relative;
            z-index: 1;
        }

        .cs-title {
            /* 49px - 84px */
            font-size: clamp(3.0625rem, 6vw, 5.25rem);
            letter-spacing: -2px;
            max-width: 100%;
        }

        .cs-title,
        .cs-text {
            text-align: left;
            color: var(--bodyTextColorWhite);
        }

        .cs-text {
            margin-bottom: calc(32 / 16 * 1rem);
        }

        .cs-button-solid {
            font-size: calc(16 / 16 * 1rem);
            font-weight: 700;
            /* 46px - 56px */
            line-height: clamp(2.875rem, 5.5vw, 3.5rem);
            text-align: center;
            text-decoration: none;
            min-width: calc(200 / 16 * 1rem);
            margin: 0;
            /* prevents padding from adding to the width */
            box-sizing: border-box;
            padding: 0 calc(24 / 16 * 1rem);
            background-color: var(--primary);
            color: var(--bodyTextColorWhite);
            border-radius: calc(4 / 16 * 1rem);
            display: inline-block;
            position: relative;
            z-index: 1;

            &:before {
                content: "";
                width: 0;
                height: 100%;
                background: #000;
                opacity: 1;
                border-radius: calc(4 / 16 * 1rem);
                position: absolute;
                top: 0;
                left: 0;
                z-index: -1;
                transition: width 0.3s;
            }

            &:hover {
                &:before {
                    width: 100%;
                }
            }
        }

        .cs-content-graphic {
            width: auto;
            height: 305%;
            max-height: calc(1300 / 16 * 1rem);
            position: absolute;
            top: 50%;
            right: calc(-64 / 16 * 1rem);
            left: auto;
            z-index: -3;
            transform: translateY(-50%);
        }

        .cs-card-group {
            width: 100%;
            margin: 0;
            padding: 0;
            display: grid;
            grid-template-columns: repeat(12, 1fr);
            /* 16px - 20px */
            gap: clamp(1rem, 2.3vw, 1.25rem);
        }

        .cs-item {
            text-align: left;
            list-style: none;
            width: 100%;
            margin: 0;
            /* prevents padding from affecting height and width */
            box-sizing: border-box;
            /* 24px - 40px */
            padding: clamp(1.5rem, 3vw, 2.5rem);
            background-color: #fff;
            border-radius: var(--borderRounded);
            box-shadow: var(--shadow);
            display: flex;
            flex-direction: column;
            align-items: center;
            grid-column: span 12;
            grid-row: span 1;
            gap: calc(20 / 16 * 1rem);
            position: relative;
            z-index: 1;
        }

        .cs-picture {
            width: 100%;
            height: calc(160 / 16 * 1rem);
            display: block;
            /* causes the image to grow to it's "auto" size, but won't shrink. the cs-info fills the remaining space */
            flex: 1 0 auto;

            img {
                border-radius: var(--borderRoundedSm);
                width: 100%;
                height: 100%;
                object-fit: cover;
            }
        }

        .cs-h3 {
            /* 20px - 25px */
            font-size: clamp(1.25rem, 2.5vw, 1.5625rem);
            font-weight: bold;
            line-height: 1.2em;
            text-align: inherit;
            /* 8px - 16px */
            margin: 0 0 clamp(0.5rem, 1.2vw, 1rem) 0;
            color: var(--headerColor);
        }

        .cs-item-text {
            font-size: calc(16 / 16 * 1rem);
            line-height: 1.5em;
            margin: 0;
            padding: 0;
            color: var(--bodyTextColor);
        }

        .cs-link {
            font-size: calc(16 / 16 * 1rem);
            font-weight: 700;
            line-height: 1.2em;
            text-decoration: none;
            width: 100%;
            margin: calc(24 / 16 * 1rem) 0 0;
            color: var(--primary);
            display: flex;
            gap: calc(4 / 16 * 1rem);

            &:hover {
                img {
                    transform: translateX(0.25rem);
                }
            }

            img {
                transition: transform 0.3s;
            }
        }

        .cs-background {
            width: 100%;
            height: 100%;
            display: block;
            position: absolute;
            top: 0;
            left: 0;
            z-index: -2;

            /* Overlay on the background image that gets removed at tablet+, in favour of the svg graphic */
            &:before {
                content: "";
                width: 100%;
                height: 100%;
                background: linear-gradient(
                    to bottom,
                    rgba(0, 0, 0),
                    rgba(0, 0, 0, 0.3)
                );
                /* prevents the cursor from interacting with it */
                pointer-events: none;
                opacity: 0.4;
                display: block;
                position: absolute;
                top: 0;
                left: 0;
                z-index: 1;
            }

            img {
                width: 100%;
                height: 100%;
                object-fit: cover;
                position: absolute;
                top: 0;
                left: 0;
            }
        }
    }
}

/* Large Phone/Tablet - 500px */
@media only screen and (min-width: 31.25rem) {
    #hero-1898 {
        .cs-item {
            flex-direction: row;
            align-items: stretch;
        }

        .cs-picture {
            max-width: calc(140 / 16 * 1rem);
            height: auto;
            min-height: calc(140 / 16 * 1rem);
        }

        .cs-info {
            align-self: center;
        }

        .cs-background {
            height: 60%;
        }
    }
}

/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
    #hero-1898 {
        .cs-background {
            &::before {
                content: "";
                width: 100%;
                height: 100%;
                display: block;
                position: absolute;
                opacity: 0.6;
                top: 0;
                left: 0;
                z-index: 1;
            }
        }
    }
}

/* Desktop - 1024px */
@media only screen and (min-width: 64rem) {
    #hero-1898 {
        .cs-item {
            grid-column: span 6;
        }

        .cs-background {
            height: 70%;
            &::before {
                // background: linear-gradient(
                //     to bottom,
                //     rgba(0, 0, 0, 0.5),
                //     rgba(0, 0, 0, 0.5)
                // );
                // opacity: 0.4;
            }
        }
    }
}

/* Desktop Parallax - 1300px */
@media only screen and (min-width: 81.25rem) {
    #hero-1898 {
        .cs-content-graphic {
            top: 30%;
        }

        .cs-background {
            background: url("/assets/images/hero.jpg");
            background-position: center;
            background-size: cover;
            background-repeat: no-repeat;
            /* creates the parallax effect */
            background-attachment: fixed;
            &::before {
                // background: linear-gradient(
                //     to bottom,
                //     rgba(0, 0, 0, 0.5),
                //     rgba(0, 0, 0, 0.5)
                // );
                // opacity: 0.4;
            }
            img {
                display: none;
            }
        }
    }
}

/* Large Desktop - 1920px */
@media only screen and (min-width: 120rem) {
    #hero-1898 {
        /* this ties the padding bottom value to the size of the screen width. The wider the image gets the taller it gets, meaning it will get closer and closer to the content. This makes the padding bottom value grow with the screen size so it accounts for the growing height of the svg graphic getting taller */
        padding-bottom: 14vw;
    }
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
    body.dark-mode {
        #hero-1898 {
            .cs-h3,
            .cs-item-text {
                color: var(--bodyTextColorWhite);
            }

            .cs-item-text {
                opacity: 0.8;
            }

            .cs-item {
                background-color: var(--medium);
            }

            .cs-background {
                &:before {
                    opacity: 0.85;
                }
            }
        }
    }
}

/*-- -------------------------- -->
<---          Services          -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    #services-1646 {
        padding: var(--sectionPadding);
        background-color: #f7f7f7;
        overflow: hidden;
        position: relative;
        z-index: 1;

        .cs-container {
            width: 100%;
            max-width: calc(1280 / 16 * 1rem);
            margin: auto;
            display: flex;
            flex-direction: column;
            align-items: center;
            /* 16px - 20px */
            gap: clamp(1rem, 2vw, 1.25rem);
        }

        .cs-content {
            width: 100%;
            /* 32px - 80px top & bottom */
            /* 16px - 80px left & right */
            padding: clamp(2rem, 6vw, 5rem) clamp(1rem, 5vw, 5rem);
            border-radius: var(--borderRounded);
            box-sizing: border-box;
            display: flex;
            flex-direction: column;
            justify-content: center;
            /* left aligns content, center it horizontally by setting to center */
            align-items: flex-start;
            /* left aligns content, center it horizontally by setting to center */
            text-align: left;
            background-color: #fff;
        }

        .cs-title {
            color: var(--headerColor);
        }

        .cs-text {
            /* 28px - 40px */
            margin-bottom: clamp(1.75rem, 3.9vw, 2.5rem);
            color: var(--bodyTextColor);
        }

        .cs-card-group {
            width: 100%;
            margin: 0;
            padding: 0;
            display: grid;
            grid-template-columns: repeat(12, 1fr);
            justify-content: center;
            /* 16px - 20px */
            gap: clamp(1rem, 2.5vw, 1.25rem);
        }

        .cs-item {
            list-style: none;
            /* .cs-h3 and .cs-item-text both use text-align: inherit, so change the below to affect the whole item */
            text-align: left;
            width: 100%;
            margin: 0;
            box-sizing: border-box;
            /* 16px - 32px */
            padding: clamp(1rem, 3vw, 2rem);
            border-radius: var(--borderRounded);
            box-sizing: border-box;
            background-color: #fff;
            display: flex;
            flex-direction: column;
            transition: border-color 0.3s;
            gap: calc(24 / 16 * 1rem);
            grid-column: span 12;

            &:hover {
                border-color: var(--primary);
            }
        }

        .cs-icon {
            width: calc(48 / 16 * 1rem);
            height: auto;
            display: block;
        }

        .cs-h3 {
            font-size: calc(20 / 16 * 1rem);
            text-align: inherit;
            line-height: 1.2em;
            margin: 0;
            margin-bottom: calc(12 / 16 * 1rem);
            color: var(--headerColor);
            transition: color 0.3s;
        }

        .cs-item-text {
            /* 14px - 16px */
            font-size: clamp(0.875rem, 1.5vw, 1rem);
            text-align: inherit;
            line-height: 1.5em;
            margin: 0;
            color: var(--bodyTextColor);
        }
    }
}

/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
    #services-1646 {
        .cs-container {
            flex-direction: row;
            align-items: stretch;
        }

        .cs-content {
            width: 44%;
            max-width: calc(522 / 16 * 1rem);
            align-self: stretch;
            flex: none;
        }

        .cs-item {
            grid-column: span 6;
        }
    }
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
    body.dark-mode {
        #services-1646 {
            background-color: rgba(0, 0, 0, 0.2);

            .cs-item,
            .cs-content {
                background-color: rgba(0, 0, 0, 0.6);
            }

            .cs-title,
            .cs-text,
            .cs-h2,
            .cs-h3,
            .cs-item-text {
                color: var(--bodyTextColorWhite);
            }
            .cs-text,
            .cs-item-text {
                opacity: 0.8;
            }
        }
    }
}
